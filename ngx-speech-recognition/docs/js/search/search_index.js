var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/RxSpeechRecognitionService.html",[0,1.501,1,1.012]],["body/injectables/RxSpeechRecognitionService.html",[0,1.362,1,0.918,2,1.09,3,0.718,4,0.591,5,0.591,6,1.048,7,0.971,8,2.329,9,0.877,10,2.195,11,1.542,12,0.485,13,1.362,14,3.938,15,2.691,16,2.691,17,1.693,18,1.693,19,2.076,20,3.035,21,2.076,22,2.683,23,1.693,24,0.078,25,1.368,26,1.115,27,1.413,28,3.035,29,1.368,30,1.883,31,1.542,32,1.518,33,1.883,34,2.159,35,1.542,36,1.542,37,1.67,38,1.883,39,2.329,40,1.413,41,0.877,42,0.877,43,0.918,44,1.907,45,2.195,46,1.413,47,1.362,48,1.09,49,1.413,50,3.038,51,1.67,52,1.883,53,1.455,54,2.195,55,1.413,56,2.534,57,1.413,58,2.341,59,1.413,60,1.413,61,1.413,62,1.413,63,1.413,64,1.767,65,1.693,66,1.693,67,1.413,68,1.09,69,1.413,70,1.413,71,1.413,72,0.877,73,0.718,74,0.591,75,0.591,76,0.718,77,0.718,78,0.591,79,0.718,80,1.413,81,1.362,82,1.09,83,1.413,84,2.683,85,0.877,86,1.767,87,1.09,88,2.341,89,0.918,90,0.591,91,1.09,92,1.09,93,0.718,94,0.877,95,1.09,96,0.395,97,1.413,98,1.413,99,1.413,100,1.413,101,1.413,102,1.413,103,1.413,104,1.413,105,1.413,106,1.413,107,1.09,108,1.413,109,4.011,110,3.035,111,1.413,112,2.195,113,2.195,114,1.413,115,1.413,116,1.413,117,1.413,118,1.413,119,1.413,120,1.413,121,1.413,122,1.413,123,1.413,124,1.413,125,1.413,126,1.09,127,1.413,128,1.413,129,1.09,130,1.413,131,1.09,132,1.413,133,1.09,134,1.413,135,1.09,136,1.413,137,1.09,138,1.413,139,1.09,140,1.413,141,1.413,142,2.195,143,2.195,144,1.413,145,2.195,146,2.691,147,1.413,148,1.09,149,1.413,150,1.413,151,1.413,152,1.09,153,1.09,154,1.09,155,1.413,156,2.195,157,1.362,158,0.718,159,3.035,160,1.413,161,1.413,162,1.413,163,1.413,164,0.718,165,1.413,166,1.413,167,1.413,168,1.413,169,1.413,170,1.413,171,2.195,172,1.413,173,1.413,174,2.195,175,1.413,176,1.413,177,1.413,178,1.413,179,1.413,180,2.195,181,1.413,182,1.413,183,1.413,184,1.413,185,0.023,186,0.036,187,0.023]],["title/classes/SpeechRecognitionCommon.html",[11,1.229,96,0.676]],["body/classes/SpeechRecognitionCommon.html",[3,0.641,4,0.527,5,0.527,6,1.151,7,0.938,11,1.02,12,0.433,13,1.246,17,2.867,18,1.928,23,1.548,24,0.079,26,1.02,29,1.766,30,2.157,31,1.766,32,1.703,33,2.157,34,2.527,35,1.684,36,1.684,37,2.239,38,2.057,39,2.527,41,2.157,42,2.157,43,0.971,44,1.766,47,2.307,48,2.556,51,1.552,52,1.246,53,0.839,58,3.238,64,0.641,82,0.973,86,1.684,89,0.527,96,0.352,107,2.681,129,2.4,131,2.4,133,2.4,135,2.4,137,2.4,139,2.4,153,1.928,154,1.548,157,1.552,158,1.02,185,0.033,186,0.033,187,0.051,188,1.261,189,2.556,190,0.973,191,1.261,192,2.5,193,2.5,194,2.5,195,2.5,196,2.5,197,2.007,198,2.007,199,1.261,200,1.261,201,3.717,202,1.261,203,1.261,204,1.261,205,1.261,206,1.261,207,1.261,208,1.261,209,1.261,210,1.261,211,1.261,212,1.261,213,1.261,214,1.261,215,1.261,216,1.261,217,1.261,218,1.261,219,1.261,220,1.261,221,1.261,222,1.261,223,1.261,224,1.386,225,2.5,226,1.261,227,2.007,228,1.261,229,1.261,230,1.261,231,1.261,232,1.261,233,2.556,234,2.556,235,3.314,236,1.261,237,2.007,238,1.261,239,1.261,240,1.261,241,1.261,242,2.007,243,2.007,244,1.261,245,1.261,246,1.261,247,1.261,248,1.261,249,1.261,250,2.007,251,1.548,252,1.261,253,1.261,254,1.261,255,1.261,256,2.007,257,0.973,258,1.246,259,1.261,260,1.261,261,1.261,262,1.261,263,1.261,264,1.261,265,1.261,266,1.261,267,1.261,268,2.007,269,0.973,270,1.261,271,2.007,272,1.261,273,1.261,274,1.261,275,1.261,276,1.261,277,1.261,278,1.261,279,1.261,280,1.261,281,1.261,282,1.261]],["title/interfaces/SpeechRecognitionConfig.html",[224,1.012,283,1.229]],["body/interfaces/SpeechRecognitionConfig.html",[3,1.084,4,0.892,5,0.892,6,0.596,7,0.476,12,0.733,13,1.846,24,0.077,29,1.883,31,1.883,32,1.688,33,2.3,34,2.505,35,1.883,36,1.883,37,2.126,38,2.3,43,1.275,44,2.405,89,0.892,93,1.511,164,2.147,185,0.035,186,0.048,187,0.035,224,0.892,283,1.511,284,2.133,285,1.084,286,1.645,287,3.706,288,3.706,289,3.706,290,3.706,291,3.706,292,3.706,293,3.706,294,3.706,295,3.706,296,3.706,297,3.706,298,2.642,299,2.879,300,4.393,301,2.133]],["title/modules/SpeechRecognitionModule.html",[302,1.501,303,1.229]],["body/modules/SpeechRecognitionModule.html",[1,1.197,3,0.792,4,0.652,5,0.652,6,0.893,7,0.808,19,1.202,24,0.079,26,0.792,32,0.652,39,1.776,41,1.776,42,1.776,43,0.799,44,1.454,47,1.776,53,0.652,64,1.745,72,0.967,73,0.792,74,0.99,75,0.99,76,1.203,77,1.203,78,0.99,79,1.203,84,1.825,86,1.454,89,0.652,96,0.436,158,0.792,185,0.025,186,0.039,187,0.025,233,2.789,234,2.789,258,0.967,283,2.055,285,1.623,299,2.551,303,1.623,304,0.967,305,1.559,306,2.789,307,1.559,308,2.367,309,1.559,310,2.861,311,2.132,312,1.559,313,2.367,314,1.559,315,3.435,316,1.559,317,2.367,318,1.559,319,2.464,320,1.559,321,1.559,322,1.202,323,1.469,324,1.469,325,1.469,326,1.469,327,1.469,328,1.469,329,1.469,330,1.469,331,1.469,332,1.469,333,1.469,334,1.776,335,1.559,336,1.469,337,1.559,338,2.333,339,1.559,340,1.559,341,1.559,342,1.559,343,1.559,344,1.202,345,1.559,346,2.861,347,4.414,348,2.707,349,2.739,350,2.861,351,2.861,352,2.861,353,2.861,354,2.861,355,4.11,356,2.367,357,2.367,358,2.367,359,2.367,360,2.367,361,2.367,362,2.367,363,2.367,364,2.367,365,2.367,366,2.367,367,2.367,368,2.367]],["title/changelog.html",[25,1.042,369,1.272,370,1.581]],["body/changelog.html",[24,0.066,90,1.46,148,2.691,185,0.057,186,0.066,187,0.057,299,2.166,306,2.691,370,2.691,371,3.489,372,3.336,373,3.489,374,3.336,375,3.489,376,3.489,377,3.489,378,2.691,379,3.489,380,2.691]],["title/coverage.html",[381,2.501]],["body/coverage.html",[0,1.841,1,0.889,5,0.889,6,1.302,7,1.047,8,2.121,9,2.296,11,1.08,24,0.076,43,0.594,53,0.889,74,0.889,75,0.889,76,1.08,77,1.08,78,0.889,79,1.08,85,1.319,90,0.889,96,0.594,185,0.035,186,0.048,187,0.035,189,2.853,190,1.639,224,0.889,283,1.08,285,1.507,286,1.639,323,1.319,324,1.319,325,1.319,326,1.319,327,1.319,328,1.319,329,1.319,330,1.319,331,1.319,332,1.319,333,1.319,334,1.319,336,1.319,381,1.639,382,1.639,383,2.125,384,2.125,385,4.659,386,2.125,387,4.611,388,4.611,389,2.125,390,2.125,391,3.518,392,2.125,393,1.639,394,2.125,395,2.125]],["title/dependencies.html",[396,2.05,397,1.796]],["body/dependencies.html",[24,0.077,68,2.971,73,1.61,185,0.052,186,0.063,187,0.052,322,2.444,397,1.966,398,3.168,399,4.657,400,3.168,401,3.168,402,3.168,403,4.151,404,2.971,405,3.168,406,2.444,407,3.168,408,3.168,409,3.168,410,3.168,411,3.168,412,3.168,413,3.852,414,3.168,415,3.168,416,3.168]],["title/index.html",[12,0.704,25,1.042,369,1.272]],["body/index.html",[1,1.604,4,0.966,7,0.896,21,1.782,22,2.755,24,0.078,26,1.174,29,1.174,31,1.597,35,1.174,36,1.174,64,1.948,72,1.434,73,1.174,74,0.966,75,1.315,78,1.315,89,1.494,90,0.966,94,1.434,96,0.998,126,1.782,157,2.38,158,1.597,185,0.038,186,0.051,187,0.038,257,1.782,302,1.434,303,1.174,311,1.434,319,1.782,334,2.217,338,1.951,344,1.782,348,1.951,349,1.951,372,1.782,374,1.782,378,1.782,380,1.782,404,1.782,406,1.782,417,2.311,418,2.311,419,2.311,420,2.311,421,2.311,422,3.572,423,2.311,424,2.311,425,2.311,426,2.311,427,2.311,428,2.311,429,2.311,430,1.782,431,2.311,432,2.311,433,3.143,434,2.311,435,3.572,436,3.572,437,3.572,438,2.311,439,2.311,440,2.311,441,2.311,442,3.143,443,2.311,444,2.311,445,3.143,446,2.311,447,2.311,448,2.311,449,2.311,450,2.311,451,3.143,452,2.311,453,2.311,454,2.311,455,2.311,456,2.311,457,3.143,458,2.311,459,2.311,460,2.311,461,2.311,462,3.143,463,2.311,464,2.311,465,2.311,466,2.311,467,2.311,468,2.311,469,1.434,470,2.311,471,1.434,472,1.782,473,2.311,474,2.311,475,1.782]],["title/license.html",[25,1.042,369,1.272,471,1.272]],["body/license.html",[24,0.059,56,2.193,152,2.193,164,1.445,185,0.046,186,0.059,187,0.046,251,2.193,269,2.193,382,2.193,430,2.193,471,1.764,472,2.193,475,2.193,476,3.954,477,2.843,478,2.843,479,2.843,480,3.602,481,2.843,482,2.843,483,2.843,484,2.843,485,2.843,486,2.843,487,3.602,488,4.546,489,2.843,490,3.954,491,2.843,492,3.602,493,2.843,494,2.843,495,3.602,496,2.843,497,2.843,498,2.843,499,2.843,500,2.843,501,2.843,502,2.843,503,3.602,504,2.843,505,2.843,506,2.843,507,2.843,508,2.843,509,2.843,510,3.602,511,3.602,512,2.843,513,2.843,514,2.843,515,2.843,516,2.843,517,2.843,518,2.843,519,2.843,520,2.843,521,2.843,522,2.843,523,2.843,524,2.843,525,2.843,526,2.843,527,2.843,528,2.843,529,2.843,530,2.843,531,2.843,532,2.843,533,2.843,534,2.843,535,2.843,536,2.843,537,2.193,538,2.843,539,2.843]],["title/modules.html",[304,2.012]],["body/modules.html",[24,0.068,185,0.059,186,0.068,187,0.059,303,1.853,304,2.263,540,3.646,541,3.646,542,3.646]],["title/overview.html",[543,2.501]],["body/overview.html",[2,2.683,24,0.066,96,0.972,185,0.057,186,0.066,187,0.057,224,1.455,302,2.528,338,2.159,397,2.159,469,2.681,537,2.683,543,2.683,544,3.479,545,3.479,546,3.479,547,3.479,548,4.074,549,3.479,550,3.479]],["title/miscellaneous/typealiases.html",[551,1.042,552,2.893]],["body/miscellaneous/typealiases.html",[6,0.981,7,0.784,12,1.206,24,0.071,30,2.542,43,0.981,81,2.542,93,1.784,164,1.784,185,0.057,186,0.067,187,0.057,298,2.708,551,1.784,553,3.511,554,4.096,555,3.511]],["title/miscellaneous/variables.html",[551,1.042,556,2.232]],["body/miscellaneous/variables.html",[6,0.919,7,0.88,8,1.229,9,2.042,12,0.68,24,0.077,32,0.828,43,1.002,50,1.527,51,2.839,52,2.839,53,1.891,65,1.527,66,1.527,74,1.181,75,1.181,76,1.671,77,1.671,78,1.376,79,1.434,81,1.229,85,1.752,86,1.006,87,1.527,88,1.527,90,1.181,91,1.527,92,1.527,93,1.006,94,1.229,95,1.527,185,0.032,186,0.046,187,0.032,189,1.229,258,1.752,285,1.006,311,1.229,323,1.752,324,1.752,325,1.752,326,1.752,327,1.752,328,1.752,329,1.752,330,1.752,331,1.752,332,1.752,333,1.752,336,1.752,348,2.042,349,2.042,391,3.502,393,2.177,469,1.229,551,1.006,556,1.527,557,2.823,558,4.54,559,4.331,560,4.331,561,1.98,562,1.98,563,3.941,564,1.98,565,1.98,566,1.98,567,1.98,568,1.98,569,1.98,570,1.98,571,1.98,572,1.98,573,1.98,574,1.98,575,1.98,576,1.98,577,1.98,578,1.98]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["0.1.x",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["0.8.29",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":469,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":463,"title":{},"body":{"index.html":{}}}],["2",{"_index":550,"title":{},"body":{"overview.html":{}}}],["2.6.4",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":478,"title":{},"body":{"license.html":{}}}],["5",{"_index":380,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["6.4.0",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["7.2.10",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["7.3.3",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["_continuous",{"_index":193,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["_grammars",{"_index":198,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["_interimresults",{"_index":194,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["_lang",{"_index":192,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["_maxalternatives",{"_index":195,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["_serviceuri",{"_index":196,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["_started",{"_index":15,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["above",{"_index":509,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":23,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{}}}],["action",{"_index":532,"title":{},"body":{"license.html":{}}}],["actual",{"_index":279,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["adapter",{"_index":82,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{}}}],["agent's",{"_index":243,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["aims",{"_index":149,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["aliases",{"_index":553,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":501,"title":{},"body":{"license.html":{}}}],["angular",{"_index":372,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":322,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":73,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"modules/SpeechRecognitionModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["any>('speech",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":433,"title":{},"body":{"index.html":{}}}],["app",{"_index":427,"title":{},"body":{"index.html":{}}}],["applicationref",{"_index":28,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["arising",{"_index":536,"title":{},"body":{"license.html":{}}}],["associated",{"_index":152,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"license.html":{}}}],["attribute",{"_index":241,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["author",{"_index":473,"title":{},"body":{"index.html":{}}}],["authors",{"_index":526,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":428,"title":{},"body":{"index.html":{}}}],["available",{"_index":541,"title":{},"body":{"modules.html":{}}}],["based",{"_index":418,"title":{},"body":{"index.html":{}}}],["begins",{"_index":162,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["behaviorsubject",{"_index":67,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["behaviorsubject(false",{"_index":54,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["boolean",{"_index":34,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{}}}],["bootstrap",{"_index":546,"title":{},"body":{"overview.html":{}}}],["break",{"_index":145,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["browse",{"_index":542,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":404,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["browsers",{"_index":431,"title":{},"body":{"index.html":{}}}],["buildprovidersfromconfig",{"_index":307,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["buildprovidersfromconfig(config",{"_index":308,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["c",{"_index":477,"title":{},"body":{"license.html":{}}}],["case",{"_index":142,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["change",{"_index":378,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":370,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["charge",{"_index":484,"title":{},"body":{"license.html":{}}}],["chrome",{"_index":421,"title":{},"body":{"index.html":{}}}],["claim",{"_index":529,"title":{},"body":{"license.html":{}}}],["class",{"_index":96,"title":{"classes/SpeechRecognitionCommon.html":{}},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["classes",{"_index":188,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["collection",{"_index":226,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["compat",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":436,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":508,"title":{},"body":{"license.html":{}}}],["config",{"_index":310,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.continuous",{"_index":351,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.grammars",{"_index":346,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.interimresults",{"_index":352,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.lang",{"_index":350,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.maxalternatives",{"_index":353,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.onaudioend",{"_index":361,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.onaudiostart",{"_index":356,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.onend",{"_index":366,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.onerror",{"_index":364,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.onnomatch",{"_index":363,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.onresult",{"_index":362,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.onsoundend",{"_index":360,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.onsoundstart",{"_index":357,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.onspeechend",{"_index":359,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.onspeechstart",{"_index":358,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.onstart",{"_index":365,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["config.serviceuri",{"_index":354,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["configs",{"_index":460,"title":{},"body":{"index.html":{}}}],["connection",{"_index":538,"title":{},"body":{"license.html":{}}}],["console.log('rxcomponent:onresult",{"_index":453,"title":{},"body":{"index.html":{}}}],["const",{"_index":84,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"modules/SpeechRecognitionModule.html":{}}}],["constructor",{"_index":26,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"modules/SpeechRecognitionModule.html":{},"index.html":{}}}],["constructor(_grammars",{"_index":191,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["constructor(ref",{"_index":27,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["continuous",{"_index":33,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{}}}],["continuous(continuous",{"_index":254,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["contract",{"_index":533,"title":{},"body":{"license.html":{}}}],["controls",{"_index":250,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["copies",{"_index":503,"title":{},"body":{"license.html":{}}}],["copy",{"_index":487,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":476,"title":{},"body":{"license.html":{}}}],["core",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":381,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":173,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["current",{"_index":153,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{}}}],["damages",{"_index":530,"title":{},"body":{"license.html":{}}}],["deal",{"_index":489,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":539,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":545,"title":{},"body":{"overview.html":{}}}],["default",{"_index":51,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":239,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["defined",{"_index":39,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"modules/SpeechRecognitionModule.html":{}}}],["demo",{"_index":422,"title":{},"body":{"index.html":{}}}],["demomodule",{"_index":464,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":397,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":465,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":499,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":382,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dynamic",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":110,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["e.g",{"_index":260,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["e.results",{"_index":95,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"miscellaneous/variables.html":{}}}],["e.type",{"_index":88,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":252,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["en",{"_index":462,"title":{},"body":{"index.html":{}}}],["end",{"_index":146,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["ends",{"_index":163,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["errhandler",{"_index":113,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["error",{"_index":181,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["error('speechrecognitionmodule",{"_index":343,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["ev",{"_index":300,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{}}}],["event",{"_index":164,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"interfaces/SpeechRecognitionConfig.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["example",{"_index":456,"title":{},"body":{"index.html":{}}}],["export",{"_index":89,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{},"index.html":{}}}],["exports",{"_index":547,"title":{},"body":{"overview.html":{}}}],["express",{"_index":517,"title":{},"body":{"license.html":{}}}],["extends",{"_index":10,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["false",{"_index":258,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{},"modules/SpeechRecognitionModule.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{},"coverage.html":{}}}],["files",{"_index":430,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":69,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["filter((e",{"_index":87,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"miscellaneous/variables.html":{}}}],["final",{"_index":259,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["fitness",{"_index":522,"title":{},"body":{"license.html":{}}}],["following",{"_index":507,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":312,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["forroot(config",{"_index":313,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["free",{"_index":483,"title":{},"body":{"license.html":{}}}],["function",{"_index":299,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{},"changelog.html":{}}}],["furnished",{"_index":506,"title":{},"body":{"license.html":{}}}],["getcontinuous",{"_index":208,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["getgrammars",{"_index":199,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["getinterimresults",{"_index":212,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["getlang",{"_index":204,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["getmaxalternatives",{"_index":216,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["getserviceuri",{"_index":220,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["getstarted",{"_index":62,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["getting",{"_index":369,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["grammar",{"_index":151,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["grammars",{"_index":29,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"index.html":{}}}],["grammars(grammars",{"_index":232,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["granted",{"_index":482,"title":{},"body":{"license.html":{}}}],["graph",{"_index":540,"title":{},"body":{"modules.html":{}}}],["handle",{"_index":278,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["handler",{"_index":109,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["handlers",{"_index":108,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["handling",{"_index":155,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["hereby",{"_index":481,"title":{},"body":{"license.html":{}}}],["holders",{"_index":527,"title":{},"body":{"license.html":{}}}],["html",{"_index":240,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["htmlのlang",{"_index":247,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["http://localhost:4200",{"_index":426,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":419,"title":{},"body":{"index.html":{}}}],["implied",{"_index":518,"title":{},"body":{"license.html":{}}}],["import",{"_index":64,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"modules/SpeechRecognitionModule.html":{},"index.html":{}}}],["imports",{"_index":458,"title":{},"body":{"index.html":{}}}],["included",{"_index":512,"title":{},"body":{"license.html":{}}}],["including",{"_index":492,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":160,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{}}}],["inherited",{"_index":59,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["initinternal",{"_index":20,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["inject",{"_index":72,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"modules/SpeechRecognitionModule.html":{},"index.html":{}}}],["inject(platform_id",{"_index":339,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["inject(speechrecognitioncontinuous",{"_index":101,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["inject(speechrecognitiongrammars",{"_index":99,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["inject(speechrecognitioninterimresults",{"_index":102,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["inject(speechrecognitionlang",{"_index":100,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["inject(speechrecognitionmaxalternatives",{"_index":103,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["inject(speechrecognitionserviceuri",{"_index":104,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/RxSpeechRecognitionService.html":{}},"body":{"injectables/RxSpeechRecognitionService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('speech",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interface",{"_index":224,"title":{"interfaces/SpeechRecognitionConfig.html":{}},"body":{"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":284,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{}}}],["interim",{"_index":256,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["interimresults",{"_index":35,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"index.html":{}}}],["interimresults(interimresults",{"_index":265,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["internal",{"_index":18,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{}}}],["interrupt",{"_index":166,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["isn't",{"_index":245,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["isplatformbrowser",{"_index":321,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["isplatformbrowser(platformid",{"_index":341,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["ja",{"_index":443,"title":{},"body":{"index.html":{}}}],["js",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["kamiazya(yuki",{"_index":474,"title":{},"body":{"index.html":{}}}],["kamiazya/ngx",{"_index":437,"title":{},"body":{"index.html":{}}}],["kind",{"_index":516,"title":{},"body":{"license.html":{}}}],["lang",{"_index":31,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"index.html":{}}}],["lang(lang",{"_index":248,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["language",{"_index":237,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["legend",{"_index":544,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":531,"title":{},"body":{"license.html":{}}}],["liable",{"_index":528,"title":{},"body":{"license.html":{}}}],["license",{"_index":471,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limitation",{"_index":493,"title":{},"body":{"license.html":{}}}],["limited",{"_index":519,"title":{},"body":{"license.html":{}}}],["list",{"_index":454,"title":{},"body":{"index.html":{}}}],["list.item(0).item(0).transcript",{"_index":452,"title":{},"body":{"index.html":{}}}],["listen",{"_index":22,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"index.html":{}}}],["listener",{"_index":171,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["listening",{"_index":159,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["load",{"_index":459,"title":{},"body":{"index.html":{}}}],["location",{"_index":276,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["map",{"_index":70,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["map((e",{"_index":92,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":186,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxalternatives",{"_index":36,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"index.html":{}}}],["maxalternatives(maxalternatives",{"_index":273,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["maximum",{"_index":267,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["mdn",{"_index":434,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":521,"title":{},"body":{"license.html":{}}}],["merge",{"_index":497,"title":{},"body":{"license.html":{}}}],["message",{"_index":442,"title":{},"body":{"index.html":{}}}],["method",{"_index":148,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"changelog.html":{}}}],["methods",{"_index":19,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"modules/SpeechRecognitionModule.html":{}}}],["middle",{"_index":168,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["miscellaneous",{"_index":551,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":472,"title":{},"body":{"index.html":{},"license.html":{}}}],["modify",{"_index":496,"title":{},"body":{"license.html":{}}}],["module",{"_index":302,"title":{"modules/SpeechRecognitionModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":304,"title":{"modules.html":{}},"body":{"modules/SpeechRecognitionModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":315,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["name",{"_index":42,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"modules/SpeechRecognitionModule.html":{}}}],["navigate",{"_index":425,"title":{},"body":{"index.html":{}}}],["new",{"_index":53,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":176,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["ng",{"_index":423,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":319,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"index.html":{}}}],["ngtools/webpack",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["ngxspeechrecognition",{"_index":417,"title":{},"body":{"index.html":{}}}],["none",{"_index":444,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":525,"title":{},"body":{"license.html":{}}}],["notice",{"_index":510,"title":{},"body":{"license.html":{}}}],["null",{"_index":234,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{},"modules/SpeechRecognitionModule.html":{}}}],["number",{"_index":37,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{}}}],["objects",{"_index":228,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["observable",{"_index":50,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"miscellaneous/variables.html":{}}}],["observable((ovserver",{"_index":172,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["obtaining",{"_index":486,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":165,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["onaudioend",{"_index":287,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{}}}],["onaudiostart",{"_index":288,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{}}}],["onend",{"_index":289,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{}}}],["onerror",{"_index":290,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{}}}],["onnomatch",{"_index":291,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{}}}],["onresult",{"_index":292,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{}}}],["onsoundend",{"_index":293,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{}}}],["onsoundstart",{"_index":294,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{}}}],["onspeechend",{"_index":295,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{}}}],["onspeechstart",{"_index":296,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{}}}],["onstart",{"_index":297,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{}}}],["ontype",{"_index":85,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ontype('result",{"_index":91,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":44,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{}}}],["otherwise",{"_index":535,"title":{},"body":{"license.html":{}}}],["out",{"_index":537,"title":{},"body":{"license.html":{},"overview.html":{}}}],["overview",{"_index":543,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["ovserver.complete",{"_index":179,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["ovserver.error(e",{"_index":182,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["ovserver.next(e",{"_index":177,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["package",{"_index":396,"title":{"dependencies.html":{}},"body":{}}],["parameters",{"_index":41,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"modules/SpeechRecognitionModule.html":{}}}],["particular",{"_index":523,"title":{},"body":{"license.html":{}}}],["pattern",{"_index":457,"title":{},"body":{"index.html":{}}}],["per",{"_index":270,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["permission",{"_index":480,"title":{},"body":{"license.html":{}}}],["permit",{"_index":504,"title":{},"body":{"license.html":{}}}],["person",{"_index":485,"title":{},"body":{"license.html":{}}}],["persons",{"_index":505,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":65,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"miscellaneous/variables.html":{}}}],["pipe(resultlist",{"_index":449,"title":{},"body":{"index.html":{}}}],["platform_id",{"_index":320,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["platformbrowser",{"_index":345,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["platformid",{"_index":340,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["portions",{"_index":514,"title":{},"body":{"license.html":{}}}],["private",{"_index":14,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["projects/.../adapter.ts",{"_index":554,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../rx",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../speech",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":13,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{}}}],["property",{"_index":201,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["protected",{"_index":17,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{}}}],["provide",{"_index":349,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":269,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{},"license.html":{}}}],["provider",{"_index":311,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":338,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"index.html":{},"overview.html":{}}}],["providers.push",{"_index":347,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["proxy",{"_index":16,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["public",{"_index":21,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"index.html":{}}}],["publish",{"_index":498,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":524,"title":{},"body":{"license.html":{}}}],["recognition",{"_index":157,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"index.html":{}}}],["recognition.common",{"_index":83,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["recognition.common.ts",{"_index":190,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{},"coverage.html":{}}}],["recognition.common.ts:105",{"_index":217,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["recognition.common.ts:108",{"_index":219,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["recognition.common.ts:125",{"_index":221,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["recognition.common.ts:128",{"_index":223,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["recognition.common.ts:32",{"_index":200,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["recognition.common.ts:36",{"_index":203,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["recognition.common.ts:53",{"_index":205,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["recognition.common.ts:57",{"_index":207,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["recognition.common.ts:69",{"_index":209,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["recognition.common.ts:7",{"_index":197,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["recognition.common.ts:73",{"_index":211,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["recognition.common.ts:88",{"_index":213,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["recognition.common.ts:91",{"_index":215,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["recognition.config",{"_index":335,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["recognition.config.ts",{"_index":286,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{},"coverage.html":{}}}],["recognition.continuous",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.grammars",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.interimresults",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.lang",{"_index":569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.maxalternatives",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.module.ts",{"_index":305,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["recognition.module.ts:162",{"_index":314,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["recognition.module.ts:178",{"_index":318,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["recognition.module.ts:53",{"_index":309,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["recognition.onaudioend",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.onaudiostart",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.onend",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.onerror",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.onnomatch",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.onresult",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.onsoundend",{"_index":574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.onsoundstart",{"_index":575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.onspeechend",{"_index":576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.onspeechstart",{"_index":577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.onstart",{"_index":578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.provider",{"_index":337,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["recognition.provider.ts",{"_index":393,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["recognition.service.ts",{"_index":9,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recognition.service.ts:134",{"_index":49,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["recognition.service.ts:42",{"_index":57,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["recognition.service.ts:44",{"_index":55,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["recognition.service.ts:46",{"_index":61,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["recognition.service.ts:50",{"_index":63,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["recognition.service.ts:52",{"_index":40,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["recognition.service.ts:79",{"_index":46,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["recognition.serviceuri",{"_index":573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recognition.token",{"_index":80,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["recognition.token.ts",{"_index":391,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["recognition/src/lib/adapter.ts",{"_index":555,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["recognition/src/lib/service/rx",{"_index":8,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recognition/src/lib/service/speech",{"_index":189,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recognition/src/lib/speech",{"_index":285,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["recognize",{"_index":150,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["ref",{"_index":45,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["reload",{"_index":429,"title":{},"body":{"index.html":{}}}],["represent",{"_index":229,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["reset",{"_index":549,"title":{},"body":{"overview.html":{}}}],["restriction",{"_index":491,"title":{},"body":{"license.html":{}}}],["result",{"_index":185,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resultlist",{"_index":90,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":187,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":86,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"modules/SpeechRecognitionModule.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":154,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{}}}],["returns",{"_index":47,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"modules/SpeechRecognitionModule.html":{}}}],["rights",{"_index":494,"title":{},"body":{"license.html":{}}}],["run",{"_index":344,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"index.html":{}}}],["rx",{"_index":439,"title":{},"body":{"index.html":{}}}],["rx.component.css",{"_index":446,"title":{},"body":{"index.html":{}}}],["rxcompoent.message",{"_index":441,"title":{},"body":{"index.html":{}}}],["rxcomponent",{"_index":447,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":68,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":71,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["rxspeechrecognitionservice",{"_index":1,"title":{"injectables/RxSpeechRecognitionService.html":{}},"body":{"injectables/RxSpeechRecognitionService.html":{},"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"index.html":{}}}],["rxspeechrecognitionservice:resultlist",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["see",{"_index":126,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"index.html":{}}}],["selector",{"_index":438,"title":{},"body":{"index.html":{}}}],["sell",{"_index":502,"title":{},"body":{"license.html":{}}}],["serve",{"_index":424,"title":{},"body":{"index.html":{}}}],["server",{"_index":406,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service",{"_index":158,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"modules/SpeechRecognitionModule.html":{},"index.html":{}}}],["serviceuri",{"_index":38,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{}}}],["serviceuri(serviceuri",{"_index":281,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["set",{"_index":107,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{}}}],["setcontinuous(continuous",{"_index":210,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["setgrammars(grammars",{"_index":202,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["setinterimresults(interimresults",{"_index":214,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["setlang(lang",{"_index":206,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["setmaxalternatives(maxalternatives",{"_index":218,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["sets",{"_index":225,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["setserviceuri(serviceuri",{"_index":222,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["setter",{"_index":127,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["setting",{"_index":244,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["settings",{"_index":455,"title":{},"body":{"index.html":{}}}],["shall",{"_index":511,"title":{},"body":{"license.html":{}}}],["single",{"_index":253,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["software",{"_index":488,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{},"index.html":{}}}],["specified",{"_index":238,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["specifies",{"_index":275,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["speech",{"_index":7,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["speech_recognition_default",{"_index":336,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechgrammar",{"_index":227,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["speechgrammarlist",{"_index":298,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{},"miscellaneous/typealiases.html":{}}}],["speechgrammarlisttype",{"_index":30,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"miscellaneous/typealiases.html":{}}}],["speechrecognition",{"_index":58,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{}}}],["speechrecognitionalternatives",{"_index":268,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["speechrecognitionaudioendhandler",{"_index":328,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionaudiostarthandler",{"_index":323,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitioncommon",{"_index":11,"title":{"classes/SpeechRecognitionCommon.html":{}},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"coverage.html":{}}}],["speechrecognitioncommon:7",{"_index":60,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["speechrecognitionconfig",{"_index":283,"title":{"interfaces/SpeechRecognitionConfig.html":{}},"body":{"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{},"coverage.html":{}}}],["speechrecognitioncontinuous",{"_index":76,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionendhandler",{"_index":333,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionerror",{"_index":301,"title":{},"body":{"interfaces/SpeechRecognitionConfig.html":{}}}],["speechrecognitionerrorhandler",{"_index":331,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionevent",{"_index":93,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"interfaces/SpeechRecognitionConfig.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitiongrammars",{"_index":74,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitioninterimresults",{"_index":77,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionlang",{"_index":75,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionmaxalternatives",{"_index":78,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionmodule",{"_index":303,"title":{"modules/SpeechRecognitionModule.html":{}},"body":{"modules/SpeechRecognitionModule.html":{},"index.html":{},"modules.html":{}}}],["speechrecognitionmodule.buildprovidersfromconfig(config",{"_index":367,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["speechrecognitionmodule.withconfig",{"_index":461,"title":{},"body":{"index.html":{}}}],["speechrecognitionnomatchhandler",{"_index":330,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionresult",{"_index":271,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["speechrecognitionresult.isfinal",{"_index":261,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["speechrecognitionresult.isfinalプロパティはfalse",{"_index":264,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["speechrecognitionresulthandler",{"_index":329,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionresultlist",{"_index":94,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionservice",{"_index":334,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"index.html":{}}}],["speechrecognitionserviceevent",{"_index":81,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionserviceuri",{"_index":79,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionsoundendhandler",{"_index":327,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionsoundstarthandler",{"_index":324,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionspeechendhandler",{"_index":326,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionspeechstarthandler",{"_index":325,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionstarthandler",{"_index":332,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["speechrecognitionインターフェイスのgrammars",{"_index":231,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["speechrecognitionインターフェイスのinterimresults",{"_index":262,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["speechrecognitionインターフェイスのlang",{"_index":246,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["speechrecognitionインターフェイスのmaxalternatives",{"_index":272,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["speechrecognitionインターフェイスのserviceuri",{"_index":280,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["start",{"_index":143,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["started",{"_index":25,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["statements",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":306,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"changelog.html":{}}}],["string",{"_index":32,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{},"miscellaneous/variables.html":{}}}],["styleurls",{"_index":445,"title":{},"body":{"index.html":{}}}],["sub.component.css",{"_index":468,"title":{},"body":{"index.html":{}}}],["sub.component.html",{"_index":467,"title":{},"body":{"index.html":{}}}],["subcomponent",{"_index":470,"title":{},"body":{"index.html":{}}}],["subject",{"_index":56,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"license.html":{}}}],["sublicense",{"_index":500,"title":{},"body":{"license.html":{}}}],["subscribe((list",{"_index":450,"title":{},"body":{"index.html":{}}}],["subscriotion",{"_index":174,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["subscriotion.unsubscribe",{"_index":180,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["subscrive",{"_index":161,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["subscriveすると聴取が開始され、end",{"_index":169,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["substantial",{"_index":513,"title":{},"body":{"license.html":{}}}],["such",{"_index":420,"title":{},"body":{"index.html":{}}}],["super(grammars",{"_index":105,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["support",{"_index":374,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["switch",{"_index":141,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["table",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":440,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":466,"title":{},"body":{"index.html":{}}}],["this._continuous",{"_index":133,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{}}}],["this._grammars",{"_index":129,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{}}}],["this._interimresults",{"_index":135,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{}}}],["this._lang",{"_index":131,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{}}}],["this._maxalternatives",{"_index":137,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{}}}],["this._serviceuri",{"_index":139,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{}}}],["this._started",{"_index":98,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this._started$.next(false",{"_index":147,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this._started$.next(true",{"_index":144,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.continuous",{"_index":132,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.grammars",{"_index":128,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.initinternal",{"_index":106,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.interimresults",{"_index":134,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.internal",{"_index":235,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["this.internal.abort",{"_index":184,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.internal.continuous",{"_index":255,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["this.internal.grammars",{"_index":236,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["this.internal.interimresults",{"_index":266,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["this.internal.lang",{"_index":249,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["this.internal.maxalternatives",{"_index":274,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["this.internal.onaudioend",{"_index":120,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.internal.onaudiostart",{"_index":115,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.internal.onend",{"_index":125,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.internal.onerror",{"_index":123,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.internal.onnomatch",{"_index":122,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.internal.onresult",{"_index":121,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.internal.onsoundend",{"_index":119,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.internal.onsoundstart",{"_index":116,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.internal.onspeechend",{"_index":118,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.internal.onspeechstart",{"_index":117,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.internal.onstart",{"_index":124,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.internal.serviceuri",{"_index":282,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["this.internal.start",{"_index":183,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.internal.stop",{"_index":178,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.lang",{"_index":130,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.maxalternatives",{"_index":136,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.message",{"_index":451,"title":{},"body":{"index.html":{}}}],["this.proxy",{"_index":97,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.proxy$.error(e",{"_index":114,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.proxy$.next(e",{"_index":111,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.proxy$.subscribe",{"_index":175,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.proxy$.subscribe((e",{"_index":140,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.ref.tick",{"_index":112,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["this.service",{"_index":448,"title":{},"body":{"index.html":{}}}],["this.serviceuri",{"_index":138,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["throw",{"_index":342,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["tort",{"_index":534,"title":{},"body":{"license.html":{}}}],["true",{"_index":257,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{},"index.html":{}}}],["true）、そうでないか（false",{"_index":263,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["type",{"_index":43,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"interfaces/SpeechRecognitionConfig.html":{},"modules/SpeechRecognitionModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":552,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":355,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["typescript",{"_index":435,"title":{},"body":{"index.html":{}}}],["unaryfunction",{"_index":66,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":233,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{},"modules/SpeechRecognitionModule.html":{}}}],["understood",{"_index":230,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["unsbscrive",{"_index":170,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["unsubscribing",{"_index":167,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["use",{"_index":495,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":368,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["used",{"_index":277,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["user",{"_index":242,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{}}}],["usevalue",{"_index":348,"title":{},"body":{"modules/SpeechRecognitionModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":52,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":556,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["voice",{"_index":156,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{}}}],["void",{"_index":48,"title":{},"body":{"injectables/RxSpeechRecognitionService.html":{},"classes/SpeechRecognitionCommon.html":{}}}],["warranties",{"_index":520,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":515,"title":{},"body":{"license.html":{}}}],["web",{"_index":432,"title":{},"body":{"index.html":{}}}],["whether",{"_index":251,"title":{},"body":{"classes/SpeechRecognitionCommon.html":{},"license.html":{}}}],["withconfig",{"_index":316,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["withconfig(config",{"_index":317,"title":{},"body":{"modules/SpeechRecognitionModule.html":{}}}],["without",{"_index":490,"title":{},"body":{"license.html":{}}}],["yamazaki",{"_index":475,"title":{},"body":{"index.html":{},"license.html":{}}}],["yuki",{"_index":479,"title":{},"body":{"license.html":{}}}],["zone.js",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":548,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/RxSpeechRecognitionService.html":{"url":"injectables/RxSpeechRecognitionService.html","title":"injectable - RxSpeechRecognitionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RxSpeechRecognitionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-speech-recognition/src/lib/service/rx-speech-recognition.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SpeechRecognitionCommon\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _started$\n                            \n                            \n                                    Private\n                                proxy$\n                            \n                            \n                                    Protected\n                                internal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initInternal\n                            \n                            \n                                    Public\n                                listen\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    $\n                                \n                                \n                                    started$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ref: ApplicationRef, grammars: SpeechGrammarListType, lang: string, continuous: boolean, interimResults: boolean, maxAlternatives: number, serviceURI: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-speech-recognition/src/lib/service/rx-speech-recognition.service.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        grammars\n                                                  \n                                                        \n                                                                        SpeechGrammarListType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lang\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        continuous\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        interimResults\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxAlternatives\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serviceURI\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initInternal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initInternal()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-speech-recognition/src/lib/service/rx-speech-recognition.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            listen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listen()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-speech-recognition/src/lib/service/rx-speech-recognition.service.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _started$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/rx-speech-recognition.service.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            proxy$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/rx-speech-recognition.service.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            internal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SpeechRecognition\n\n                        \n                    \n                    \n                        \n                            Default value : new SpeechRecognition()\n                        \n                    \n                            \n                                \n                                    Inherited from         SpeechRecognitionCommon\n\n                                \n                            \n                        \n                            \n                                    Defined in         SpeechRecognitionCommon:7\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        $\n                    \n                \n\n                \n                    \n                        get$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/rx-speech-recognition.service.ts:46\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        started$\n                    \n                \n\n                \n                    \n                        getstarted$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/rx-speech-recognition.service.ts:50\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  Observable,\n  pipe,\n  UnaryFunction,\n  Subject,\n  BehaviorSubject,\n} from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { Injectable, ApplicationRef, Inject, Optional } from '@angular/core';\n\nimport {\n  SpeechRecognitionGrammars,\n  SpeechRecognitionLang,\n  SpeechRecognitionContinuous,\n  SpeechRecognitionInterimResults,\n  SpeechRecognitionMaxAlternatives,\n  SpeechRecognitionServiceUri,\n} from './speech-recognition.token';\n\nimport {\n  SpeechGrammarListType,\n  SpeechRecognitionServiceEvent,\n} from '../adapter';\n\nimport {\n  SpeechRecognitionCommon,\n} from './speech-recognition.common';\n\nconst onType = (type: string) => {\n  return filter((e: SpeechRecognitionServiceEvent) => (e.type === type));\n};\n\nexport const resultList: UnaryFunction, Observable> = pipe(\n  onType('result'),\n  map((e: SpeechRecognitionEvent): SpeechRecognitionResultList => e.results),\n);\n\n@Injectable()\nexport class RxSpeechRecognitionService extends SpeechRecognitionCommon {\n\n  private proxy$: Subject = new Subject();\n\n  private _started$ = new BehaviorSubject(false);\n\n  get $(): Observable {\n    return this.proxy$ as Observable;\n  }\n\n  get started$(): Observable {\n    return this._started$ as Observable;\n  }\n\n  constructor(\n    private ref: ApplicationRef,\n\n    @Optional() @Inject(SpeechRecognitionGrammars)\n    grammars: SpeechGrammarListType,\n\n    @Optional() @Inject(SpeechRecognitionLang)\n    lang: string,\n\n    @Optional() @Inject(SpeechRecognitionContinuous)\n    continuous: boolean,\n\n    @Optional() @Inject(SpeechRecognitionInterimResults)\n    interimResults: boolean,\n\n    @Optional() @Inject(SpeechRecognitionMaxAlternatives)\n    maxAlternatives: number,\n\n    @Optional() @Inject(SpeechRecognitionServiceUri)\n    serviceURI: string,\n  ) {\n    super(grammars, lang, continuous, interimResults, maxAlternatives, serviceURI);\n    this.initInternal();\n  }\n\n  private initInternal() {\n    // set handlers\n    const handler = (e) => {\n      this.proxy$.next(e);\n      this.ref.tick();\n    };\n    const errHandler = (e) => {\n      this.proxy$.error(e);\n      this.ref.tick();\n    };\n    this.internal.onaudiostart = handler;\n    this.internal.onsoundstart = handler;\n    this.internal.onspeechstart = handler;\n\n    this.internal.onspeechend = handler;\n    this.internal.onsoundend = handler;\n    this.internal.onaudioend = handler;\n\n    this.internal.onresult = handler;\n    this.internal.onnomatch = handler;\n    this.internal.onerror = errHandler;\n\n    this.internal.onstart = handler;\n    this.internal.onend = handler;\n\n    // see setter methods\n    this.grammars = this._grammars;\n    this.lang = this._lang;\n    this.continuous = this._continuous;\n    this.interimResults = this._interimResults;\n    this.maxAlternatives = this._maxAlternatives;\n    this.serviceURI = this._serviceURI;\n\n    this.proxy$.subscribe((e) => {\n      switch (e.type) {\n        case 'start':\n          this._started$.next(true);\n          break;\n        case 'end':\n          this._started$.next(false);\n          break;\n      }\n    });\n  }\n\n  // The listen() method aims to recognize the grammar associated with the current SpeechRecognition,\n  // Observable is returned for handling voice recognition service listening to incoming voice.\n  // When you subscrive the return value, listening begins and listening ends when an end event occurs.\n  // Interrupt listening by unsubscribing in the middle.\n  //\n  // listen() メソッドは、現在のSpeechRecognitionに\n  // 関連付けられた文法を認識することを目的として、\n  // 着信音声を聴取する音声認識サービスを扱うためのObservableが返されます。\n  // 返り値をsubscriveすると聴取が開始され、endのイベントが発生すると聴取を終了します。\n  // 途中でunsbscriveすることで聴取を中断します。\n  public listen(): Observable {\n\n    const listener = new Observable((ovserver) => {\n      // create subscriotion\n      const subscriotion = this.proxy$.subscribe({\n        next: (e) => {\n          ovserver.next(e);\n\n          if (e.type && e.type === 'end') {\n            this.internal.stop();\n            ovserver.complete();\n            subscriotion.unsubscribe();\n          }\n        },\n        error: (e) => ovserver.error(e),\n      });\n\n      // Speech Recognition start\n      this.internal.start();\n\n      return () => {\n        this.internal.abort();\n        subscriotion.unsubscribe();\n      };\n    });\n\n    return listener;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpeechRecognitionCommon.html":{"url":"classes/SpeechRecognitionCommon.html","title":"class - SpeechRecognitionCommon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpeechRecognitionCommon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                internal\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    grammars\n                                \n                                \n                                    lang\n                                \n                                \n                                    continuous\n                                \n                                \n                                    interimResults\n                                \n                                \n                                    maxAlternatives\n                                \n                                \n                                    serviceURI\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_grammars: SpeechGrammarListType, _lang: string, _continuous: boolean, _interimResults: boolean, _maxAlternatives: number, _serviceURI: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _grammars\n                                                  \n                                                        \n                                                                        SpeechGrammarListType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _lang\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _continuous\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _interimResults\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _maxAlternatives\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _serviceURI\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            internal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SpeechRecognition\n\n                        \n                    \n                    \n                        \n                            Default value : new SpeechRecognition()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        grammars\n                    \n                \n\n                \n                    \n                        getgrammars()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts:32\n                                \n                            \n                    \n                        \n                                Property\n\n\n                                \n                                    Returns :         SpeechGrammarListType\n\n                                \n                        \n                    \n\n                \n                    \n                        setgrammars(grammars)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            grammars\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        lang\n                    \n                \n\n                \n                    \n                        getlang()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts:53\n                                \n                            \n\n                \n                    \n                        setlang(lang: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            lang\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        continuous\n                    \n                \n\n                \n                    \n                        getcontinuous()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts:69\n                                \n                            \n\n                \n                    \n                        setcontinuous(continuous: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts:73\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            continuous\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        interimResults\n                    \n                \n\n                \n                    \n                        getinterimResults()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts:88\n                                \n                            \n\n                \n                    \n                        setinterimResults(interimResults: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts:91\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            interimResults\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        maxAlternatives\n                    \n                \n\n                \n                    \n                        getmaxAlternatives()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts:105\n                                \n                            \n\n                \n                    \n                        setmaxAlternatives(maxAlternatives: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts:108\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            maxAlternatives\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceURI\n                    \n                \n\n                \n                    \n                        getserviceURI()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts:125\n                                \n                            \n\n                \n                    \n                        setserviceURI(serviceURI: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts:128\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            serviceURI\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import {\n  SpeechGrammarListType,\n} from '../adapter';\n\nexport class SpeechRecognitionCommon {\n\n  protected internal: SpeechRecognition = new SpeechRecognition();\n\n  constructor(\n    protected _grammars: SpeechGrammarListType,\n    protected _lang: string,\n    protected _continuous: boolean,\n    protected _interimResults: boolean,\n    protected _maxAlternatives: number,\n    protected _serviceURI: string,\n  ) { }\n\n\n  /**\n   * Property\n   */\n\n\n  // The grammars property of the SpeechRecognition interface returns and sets\n  // a collection of SpeechGrammar objects\n  // that represent the grammars that will be understood\n  // by the current SpeechRecognition.\n  //\n  // SpeechRecognitionインターフェイスのgrammarsプロパティは、\n  // 現在のSpeechRecognitionで認識される文法を表す\n  // SpeechGrammarオブジェクトのコレクションを返して設定します。\n  get grammars(): SpeechGrammarListType {\n    return this._grammars;\n  }\n\n  set grammars(grammars: SpeechGrammarListType) {\n    this._grammars = grammars;\n    if (this._grammars !== undefined && this._grammars != null && this.internal) {\n      this.internal.grammars = this._grammars;\n    }\n  }\n\n  // The lang property of the SpeechRecognition interface returns\n  // and sets the language of the current SpeechRecognition.\n  // If not specified, this defaults to the HTML lang attribute value,\n  // or the user agent's language setting if that isn't set either.\n  //\n  // SpeechRecognitionインターフェイスのlangプロパティは、\n  // 現在のSpeechRecognitionの言語を返して設定します。\n  // 指定されていない場合、これはデフォルトでHTMLのlang属性の値、\n  // またはユーザエージェントの言語設定が設定されていない場合は\n  // その値になります。\n  get lang(): string {\n    return this._lang;\n  }\n\n  set lang(lang: string) {\n    this._lang = lang;\n    if (this._lang !== undefined && this._lang != null && this.internal) {\n      this.internal.lang = this._lang;\n    }\n  }\n\n  // The continuous property of the SpeechRecognition interface controls\n  // whether continuous results are returned for each recognition, or only a single result.\n  //\n  // SpeechRecognitionインターフェイスの連続プロパティは、\n  // 認識結果ごとに連続した結果を返すか、単一の結果のみを返すかを制御します。\n  get continuous(): boolean {\n    return this._continuous;\n  }\n\n  set continuous(continuous: boolean) {\n    this._continuous = continuous;\n    if (this._continuous !== undefined && this._continuous != null && this.internal) {\n      this.internal.continuous = this._continuous;\n    }\n  }\n\n  // The interimResults property of the SpeechRecognition interface controls\n  // whether interim results should be returned (true)\n  // or not (false.) Interim results are results that are not yet final\n  // (e.g. the SpeechRecognitionResult.isFinal property is false.)\n  //\n  // SpeechRecognitionインターフェイスのinterimResultsプロパティは、\n  // 中間結果を返すかどうか（true）、そうでないか（false）を制御します。\n  // 中間結果は、最終段階ではない結果です（SpeechRecognitionResult.isFinalプロパティはfalseです）。\n  get interimResults(): boolean {\n    return this._interimResults;\n  }\n  set interimResults(interimResults: boolean) {\n    this._interimResults = interimResults;\n    if (this._interimResults !== undefined && this._interimResults != null && this.internal) {\n      this.internal.interimResults = this._interimResults;\n    }\n  }\n\n  // The maxAlternatives property of the SpeechRecognition interface sets\n  // the maximum number of SpeechRecognitionAlternatives\n  // provided per SpeechRecognitionResult.\n  //\n  // SpeechRecognitionインターフェイスのmaxAlternativesプロパティは、\n  // SpeechRecognitionResultごとに提供される\n  // SpeechRecognitionAlternativesの最大数を設定します。\n  get maxAlternatives(): number {\n    return this._maxAlternatives;\n  }\n  set maxAlternatives(maxAlternatives: number) {\n    this._maxAlternatives = maxAlternatives;\n    if (this._maxAlternatives !== undefined && this._maxAlternatives != null && this.internal) {\n      this.internal.maxAlternatives = this._maxAlternatives;\n    }\n  }\n\n  // The serviceURI property of the SpeechRecognition interface specifies\n  // the location of the speech recognition service\n  // used by the current SpeechRecognition to handle\n  // the actual recognition. The default is the user agent's\n  // default speech service.\n  //\n  // SpeechRecognitionインターフェイスのserviceURIプロパティは、\n  // 現在のSpeechRecognitionが実際の認識を処理するために使用する\n  // 音声認識サービスの場所を指定します。\n  // デフォルトはユーザエージェントのデフォルト音声サービスです。\n  get serviceURI(): string {\n    return this._serviceURI;\n  }\n  set serviceURI(serviceURI: string) {\n    this._serviceURI = serviceURI;\n    if (this._serviceURI !== undefined && this._serviceURI != null && this.internal) {\n      this.internal.serviceURI = this._serviceURI;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpeechRecognitionConfig.html":{"url":"interfaces/SpeechRecognitionConfig.html","title":"interface - SpeechRecognitionConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpeechRecognitionConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-speech-recognition/src/lib/speech-recognition.config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        continuous\n                                \n                                \n                                            Optional\n                                        grammars\n                                \n                                \n                                            Optional\n                                        interimResults\n                                \n                                \n                                            Optional\n                                        lang\n                                \n                                \n                                            Optional\n                                        maxAlternatives\n                                \n                                \n                                            Optional\n                                        onaudioend\n                                \n                                \n                                            Optional\n                                        onaudiostart\n                                \n                                \n                                            Optional\n                                        onend\n                                \n                                \n                                            Optional\n                                        onerror\n                                \n                                \n                                            Optional\n                                        onnomatch\n                                \n                                \n                                            Optional\n                                        onresult\n                                \n                                \n                                            Optional\n                                        onsoundend\n                                \n                                \n                                            Optional\n                                        onsoundstart\n                                \n                                \n                                            Optional\n                                        onspeechend\n                                \n                                \n                                            Optional\n                                        onspeechstart\n                                \n                                \n                                            Optional\n                                        onstart\n                                \n                                \n                                            Optional\n                                        serviceURI\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        continuous\n                                    \n                                \n                                \n                                    \n                                        continuous:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grammars\n                                    \n                                \n                                \n                                    \n                                        grammars:     SpeechGrammarList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpeechGrammarList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        interimResults\n                                    \n                                \n                                \n                                    \n                                        interimResults:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                    \n                                \n                                \n                                    \n                                        lang:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAlternatives\n                                    \n                                \n                                \n                                    \n                                        maxAlternatives:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onaudioend\n                                    \n                                \n                                \n                                    \n                                        onaudioend:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onaudiostart\n                                    \n                                \n                                \n                                    \n                                        onaudiostart:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onend\n                                    \n                                \n                                \n                                    \n                                        onend:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onerror\n                                    \n                                \n                                \n                                    \n                                        onerror:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onnomatch\n                                    \n                                \n                                \n                                    \n                                        onnomatch:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onresult\n                                    \n                                \n                                \n                                    \n                                        onresult:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onsoundend\n                                    \n                                \n                                \n                                    \n                                        onsoundend:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onsoundstart\n                                    \n                                \n                                \n                                    \n                                        onsoundstart:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onspeechend\n                                    \n                                \n                                \n                                    \n                                        onspeechend:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onspeechstart\n                                    \n                                \n                                \n                                    \n                                        onspeechstart:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onstart\n                                    \n                                \n                                \n                                    \n                                        onstart:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceURI\n                                    \n                                \n                                \n                                    \n                                        serviceURI:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SpeechRecognitionConfig {\n  grammars?: SpeechGrammarList;\n  lang?: string;\n  continuous?: boolean;\n  interimResults?: boolean;\n  maxAlternatives?: number;\n  serviceURI?: string;\n  onaudiostart?: (ev: Event) => any;\n  onsoundstart?: (ev: Event) => any;\n  onspeechstart?: (ev: Event) => any;\n  onspeechend?: (ev: Event) => any;\n  onsoundend?: (ev: Event) => any;\n  onaudioend?: (ev: Event) => any;\n  onresult?: (ev: SpeechRecognitionEvent) => any;\n  onnomatch?: (ev: SpeechRecognitionEvent) => any;\n  onerror?: (ev: SpeechRecognitionError) => any;\n  onstart?: (ev: Event) => any;\n  onend?: (ev: Event) => any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpeechRecognitionModule.html":{"url":"modules/SpeechRecognitionModule.html","title":"module - SpeechRecognitionModule","body":"\n                   \n\n\n\n\n    Modules\n    SpeechRecognitionModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-speech-recognition/src/lib/speech-recognition.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            buildProvidersFromConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildProvidersFromConfig(config: SpeechRecognitionConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-speech-recognition/src/lib/speech-recognition.module.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                SpeechRecognitionConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: SpeechRecognitionConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-speech-recognition/src/lib/speech-recognition.module.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                SpeechRecognitionConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            withConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    withConfig(config: SpeechRecognitionConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-speech-recognition/src/lib/speech-recognition.module.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                SpeechRecognitionConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Provider,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\n\nimport {\n  isPlatformBrowser,\n} from '@angular/common';\n\nimport {\n  SpeechRecognitionGrammars,\n  SpeechRecognitionLang,\n  SpeechRecognitionContinuous,\n  SpeechRecognitionInterimResults,\n  SpeechRecognitionMaxAlternatives,\n  SpeechRecognitionServiceUri,\n  SpeechRecognitionAudiostartHandler,\n  SpeechRecognitionSoundstartHandler,\n  SpeechRecognitionSpeechstartHandler,\n  SpeechRecognitionSpeechendHandler,\n  SpeechRecognitionSoundendHandler,\n  SpeechRecognitionAudioendHandler,\n  SpeechRecognitionResultHandler,\n  SpeechRecognitionNomatchHandler,\n  SpeechRecognitionErrorHandler,\n  SpeechRecognitionStartHandler,\n  SpeechRecognitionEndHandler,\n  SpeechRecognitionService,\n  RxSpeechRecognitionService,\n} from './service';\n\nimport { SpeechRecognitionConfig } from './speech-recognition.config';\nimport { SPEECH_RECOGNITION_DEFAULT } from './speech-recognition.provider';\n\n@NgModule({\n  providers: [\n    SPEECH_RECOGNITION_DEFAULT,\n  ],\n})\nexport class SpeechRecognitionModule {\n\n  constructor(\n    @Inject(PLATFORM_ID) platformId: string\n  ) {\n    if (isPlatformBrowser(platformId) === false) {\n      throw new Error('SpeechRecognitionModule: it run on PlatformBrowser.');\n    }\n  }\n\n  static buildProvidersFromConfig(config: SpeechRecognitionConfig): Provider[] {\n    const providers: Provider[] = [];\n    if (config.grammars !== undefined && config.grammars != null) {\n      providers.push({\n        useValue: config.grammars,\n        provide: SpeechRecognitionGrammars,\n      });\n    }\n    if (config.lang !== undefined && config.lang != null) {\n      providers.push({\n        useValue: config.lang,\n        provide: SpeechRecognitionLang,\n      });\n    }\n    if (config.continuous !== undefined && config.continuous != null) {\n      providers.push({\n        useValue: config.continuous,\n        provide: SpeechRecognitionContinuous,\n      });\n    }\n    if (config.interimResults !== undefined && config.interimResults != null) {\n      providers.push({\n        useValue: config.interimResults,\n        provide: SpeechRecognitionInterimResults,\n      });\n    }\n    if (config.maxAlternatives !== undefined && config.maxAlternatives != null) {\n      providers.push({\n        useValue: config.maxAlternatives,\n        provide: SpeechRecognitionMaxAlternatives,\n      });\n    }\n    if (config.serviceURI !== undefined && config.serviceURI != null) {\n      providers.push({\n        useValue: config.serviceURI,\n        provide: SpeechRecognitionServiceUri,\n      });\n    }\n    if (typeof config.onaudiostart === 'function') {\n      providers.push({\n        useValue: config.onaudiostart,\n        provide: SpeechRecognitionAudiostartHandler,\n      });\n    }\n    if (typeof config.onsoundstart === 'function') {\n      providers.push({\n        useValue: config.onsoundstart,\n        provide: SpeechRecognitionSoundstartHandler,\n      });\n    }\n    if (typeof config.onspeechstart === 'function') {\n      providers.push({\n        useValue: config.onspeechstart,\n        provide: SpeechRecognitionSpeechstartHandler,\n      });\n    }\n    if (typeof config.onspeechend === 'function') {\n      providers.push({\n        useValue: config.onspeechend,\n        provide: SpeechRecognitionSpeechendHandler,\n      });\n    }\n    if (typeof config.onsoundend === 'function') {\n      providers.push({\n        useValue: config.onsoundend,\n        provide: SpeechRecognitionSoundendHandler,\n      });\n    }\n    if (typeof config.onaudioend === 'function') {\n      providers.push({\n        useValue: config.onaudioend,\n        provide: SpeechRecognitionAudioendHandler,\n      });\n    }\n    if (typeof config.onresult === 'function') {\n      providers.push({\n        useValue: config.onresult,\n        provide: SpeechRecognitionResultHandler,\n      });\n    }\n    if (typeof config.onnomatch === 'function') {\n      providers.push({\n        useValue: config.onnomatch,\n        provide: SpeechRecognitionNomatchHandler,\n      });\n    }\n    if (typeof config.onerror === 'function') {\n      providers.push({\n        useValue: config.onerror,\n        provide: SpeechRecognitionErrorHandler,\n      });\n    }\n    if (typeof config.onstart === 'function') {\n      providers.push({\n        useValue: config.onstart,\n        provide: SpeechRecognitionStartHandler,\n      });\n    }\n    if (typeof config.onend === 'function') {\n      providers.push({\n        useValue: config.onend,\n        provide: SpeechRecognitionEndHandler,\n      });\n    }\n\n    return providers;\n  }\n\n\n  static forRoot(config: SpeechRecognitionConfig): ModuleWithProviders {\n    const providers: Provider[] = SpeechRecognitionModule.buildProvidersFromConfig(config);\n    providers.push({\n      useClass: SpeechRecognitionService,\n      provide: SpeechRecognitionService,\n    });\n    providers.push({\n      useClass: RxSpeechRecognitionService,\n      provide: RxSpeechRecognitionService,\n    });\n    return {\n      ngModule: SpeechRecognitionModule,\n      providers: providers,\n    };\n  }\n\n  static withConfig(config: SpeechRecognitionConfig): ModuleWithProviders {\n    return {\n      ngModule: SpeechRecognitionModule,\n      providers: SpeechRecognitionModule.buildProvidersFromConfig(config),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n0.3.0\nAngular 7 Support.\n0.2.0\nAngular 6 Support.\nStatic method RxSpeechRecognitionService:resultList change to function resultList.\n0.1.x\nAngular 5 Support.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/rx-speech-recognition.service.ts\n            \n            injectable\n            RxSpeechRecognitionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/rx-speech-recognition.service.ts\n            \n            variable\n            onType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/rx-speech-recognition.service.ts\n            \n            variable\n            resultList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.common.ts\n            \n            class\n            SpeechRecognitionCommon\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.service.ts\n            \n            injectable\n            SpeechRecognitionService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionAudioendHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionAudiostartHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionContinuous\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionEndHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionErrorHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionGrammars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionInterimResults\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionLang\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionMaxAlternatives\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionNomatchHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionResultHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionServiceUri\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionSoundendHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionSoundstartHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionSpeechendHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionSpeechstartHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n            \n            variable\n            SpeechRecognitionStartHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/speech-recognition.config.ts\n            \n            interface\n            SpeechRecognitionConfig\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/ngx-speech-recognition/src/lib/speech-recognition.provider.ts\n            \n            variable\n            SPEECH_RECOGNITION_DEFAULT\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.10\n        \n            @angular/common : ^7.2.10\n        \n            @angular/compiler : ^7.2.10\n        \n            @angular/core : ^7.2.10\n        \n            @angular/forms : ^7.2.10\n        \n            @angular/http : ^7.2.10\n        \n            @angular/platform-browser : ^7.2.10\n        \n            @angular/platform-browser-dynamic : ^7.2.10\n        \n            @angular/platform-server : ^7.2.10\n        \n            @angular/router : ^7.2.10\n        \n            @ngtools/webpack : 7.3.3\n        \n            core-js : ^2.6.4\n        \n            rxjs : ^6.4.0\n        \n            rxjs-compat : ^6.4.0\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n      \nNgxSpeechRecognition\n\nAngular 5+ speech recognition service (based on browser implementation such as Chrome).\nDemo\n\nRun ng serve for a demo server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nSee\nSupport Browsers\nWeb Speech API -- MDN\nAPI\nRxSpeechRecognitionService\n```typescript\nimport { Component } from '@angular/core';\nimport {\n  RxSpeechRecognitionService,\n  resultList,\n} from '@kamiazya/ngx-speech-recognition';\n@Component({\n  selector: 'demo-rx',\n  template: `\n  RxCompoent.message: {{message}}\n  \n\nlisten\n  lang: ja\n  grammars: none\n  `,\n  styleUrls: ['./rx.component.css'],\n  providers: [\n    RxSpeechRecognitionService,\n  ],\n})\nexport class RxComponent {\n\n  message = '';\n  constructor(\n    public service: RxSpeechRecognitionService,\n  ) { }\n  listen() {\n    this.service\n      .listen()\n      .pipe(resultList)\n      .subscribe((list: SpeechRecognitionResultList) => {\n        this.message = list.item(0).item(0).transcript;\n        console.log('RxComponent:onresult', this.message, list);\n      });\n  }\n}\n```\nSettings Example\nModule Pattern\n```typescript\nimport {\n  SpeechRecognitionModule,\n} from '@kamiazya/ngx-speech-recognition';\n@NgModule({\n  imports: [\n    // load with configs.\n    SpeechRecognitionModule.withConfig({\n      lang: 'en-US',\n      interimResults: true,\n      maxAlternatives: 10,\n    }),\n  ],\n})\nexport class DemoModule { }\n```\nProvider Pattern\nDependency Inject to SpeechRecognitionService.\n```typescript\nimport {\n  SpeechRecognitionLang,\n  SpeechRecognitionMaxAlternatives,\n  SpeechRecognitionGrammars,\n  SpeechRecognitionService,\n} from '@kamiazya/ngx-speech-recognition';\n@Component({\n  templateUrl: './sub.component.html',\n  styleUrls: ['./sub.component.css'],\n  providers: [\n    {\n      provide: SpeechRecognitionLang,\n      useValue: 'en-US',\n    },\n    {\n      provide: SpeechRecognitionMaxAlternatives,\n      useValue: 1,\n    },\n    SpeechRecognitionService,\n  ],\n})\nexport class SubComponent { }\n```\nLicense\nMIT\n\nAuthor\nkamiazya(Yuki Yamazaki)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Yuki Yamazaki\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SpeechRecognitionModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SpeechGrammarListType   (projects/.../adapter.ts)\n                        \n                        \n                            SpeechRecognitionServiceEvent   (projects/.../adapter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-speech-recognition/src/lib/adapter.ts\n    \n    \n        \n            \n                \n                    \n                    SpeechGrammarListType\n                \n            \n            \n                \n                        SpeechGrammarList\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SpeechRecognitionServiceEvent\n                \n            \n            \n                \n                        Event | SpeechRecognitionEvent\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            onType   (projects/.../rx-speech-recognition.service.ts)\n                        \n                        \n                            resultList   (projects/.../rx-speech-recognition.service.ts)\n                        \n                        \n                            SPEECH_RECOGNITION_DEFAULT   (projects/.../speech-recognition.provider.ts)\n                        \n                        \n                            SpeechRecognitionAudioendHandler   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionAudiostartHandler   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionContinuous   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionEndHandler   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionErrorHandler   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionGrammars   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionInterimResults   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionLang   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionMaxAlternatives   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionNomatchHandler   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionResultHandler   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionServiceUri   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionSoundendHandler   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionSoundstartHandler   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionSpeechendHandler   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionSpeechstartHandler   (projects/.../speech-recognition.token.ts)\n                        \n                        \n                            SpeechRecognitionStartHandler   (projects/.../speech-recognition.token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-speech-recognition/src/lib/service/rx-speech-recognition.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            onType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (type: string) => {\n  return filter((e: SpeechRecognitionServiceEvent) => (e.type === type));\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resultList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UnaryFunction, Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : pipe(\n  onType('result'),\n  map((e: SpeechRecognitionEvent): SpeechRecognitionResultList => e.results),\n)\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-speech-recognition/src/lib/speech-recognition.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SPEECH_RECOGNITION_DEFAULT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Provider[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: SpeechRecognitionContinuous,\n    useValue: false,\n  },\n  {\n    provide: SpeechRecognitionInterimResults,\n    useValue: false,\n  },\n  {\n    provide: SpeechRecognitionMaxAlternatives,\n    useValue: 1,\n  },\n]\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-speech-recognition/src/lib/service/speech-recognition.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionAudioendHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken any>('speech-recognition.onaudioend')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionAudiostartHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken any>('speech-recognition.onaudiostart')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionContinuous\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('speech-recognition.continuous')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionEndHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken any>('speech-recognition.onend')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionErrorHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken any>('speech-recognition.onerror')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionGrammars\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('speech-recognition.grammars')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionInterimResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('speech-recognition.interimResults')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionLang\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('speech-recognition.lang')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionMaxAlternatives\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('speech-recognition.maxAlternatives')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionNomatchHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken any>('speech-recognition.onnomatch')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionResultHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken any>('speech-recognition.onresult')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionServiceUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('speech-recognition.serviceURI')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionSoundendHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken any>('speech-recognition.onsoundend')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionSoundstartHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken any>('speech-recognition.onsoundstart')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionSpeechendHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken any>('speech-recognition.onspeechend')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionSpeechstartHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken any>('speech-recognition.onspeechstart')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpeechRecognitionStartHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken any>('speech-recognition.onstart')\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
